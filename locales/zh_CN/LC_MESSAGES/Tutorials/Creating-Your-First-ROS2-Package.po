# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 10:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:4
msgid "Creating your first ROS 2 package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:6
msgid ""
"**Goal:** Create a new package using either CMake or Python, and run its "
"executable."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:8
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:10
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:14
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:17
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:20
msgid "1 What is a ROS 2 package?"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:22
msgid ""
"A package can be considered a container for your ROS 2 code. If you want "
"to be able to install your code or share it with others, then you’ll need"
" it organized in a package. With packages, you can release your ROS 2 "
"work and allow others to build and use it easily."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:26
msgid ""
"Package creation in ROS 2 uses ament as its build system and colcon as "
"its build tool. You can create a package using either CMake or Python, "
"which are officially supported, though other build types do exist."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:30
msgid "2 What makes up a ROS 2 package?"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:32
msgid ""
"ROS 2 Python and CMake packages each have their own minimum required "
"contents:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:36
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:52
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:143
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:161
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:179
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:338
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:357
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:386
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:459
msgid "CMake"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:38
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:43
msgid "``package.xml`` file containing meta information about the package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:39
msgid ""
"``CMakeLists.txt`` file that describes how to build the code within the "
"package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:41
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:60
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:149
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:167
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:202
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:344
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:366
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:411
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:463
msgid "Python"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:44
msgid "``setup.py`` containing instructions for how to install the package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:45
msgid ""
"``setup.cfg`` is required when a package has executables, so ``ros2 run``"
" can find them"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:46
msgid ""
"``/<package_name>`` - a directory with the same name as your package, "
"used by ROS 2 tools to find your package, contains ``__init__.py``"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:48
msgid "The simplest possible package may have a file structure that looks like:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:71
msgid "3 Packages in a workspace"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:73
msgid ""
"A single workspace can contain as many packages as you want, each in "
"their own folder. You can also have packages of different build types in "
"one workspace (CMake, Python, etc.). You cannot have nested packages."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:77
msgid ""
"Best practice is to have a ``src`` folder within your workspace, and to "
"create your packages in there. This keeps the top level of the workspace "
"“clean”."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:80
msgid "A trivial workspace might look like:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:101
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:103
msgid ""
"You should have a ROS 2 workspace after following the instructions in the"
" :doc:`previous tutorial <./Workspace/Creating-A-Workspace>`. You will "
"create your package in this workspace."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:108
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:111
msgid "1 Create a package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:113
msgid ""
"First, :doc:`source your ROS 2 installation <./Configuring-"
"ROS2-Environment>`."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:115
msgid ""
"Let’s use the workspace you created in the :ref:`previous tutorial <new-"
"directory>`, ``dev_ws``, for your new package.`"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:117
msgid ""
"Make sure you are in the ``src`` folder before running the package "
"creation command."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:121
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:244
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:266
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:305
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:127
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:250
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:272
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:311
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:133
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:256
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:278
#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:317
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:139
msgid "The command syntax for creating a new package in ROS 2 is:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:155
msgid ""
"For this tutorial, you will use the optional argument ``--node-name`` "
"which creates a simple Hello World type executable in the package."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:157
msgid "Enter the following command in your terminal:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:173
msgid ""
"You will now have a new folder within your workspace’s ``src`` directory "
"called ``my_package``."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:175
msgid "After running the command, your terminal will return the message:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:232
msgid "You can see the automatically generated files for the new package."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:235
msgid "2 Build a package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:237
msgid ""
"Putting packages in a workspace is especially valuable because you can "
"build many packages at once by running ``colcon build`` in the workspace "
"root. Otherwise, you would have to build each package individually."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:240
msgid "Return to the root of your workspace:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:262
msgid "Now you can build your packages:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:284
msgid ""
"Windows doesn’t allow long paths, so ``merge-install`` will combine all "
"the paths into the ``install`` directory."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:286
msgid ""
"Recall from the last tutorial that you also have the ``ros_tutorials`` "
"packages in your ``dev_ws``. You might’ve noticed that running ``colcon "
"build`` also built the ``turtlesim`` package. That’s fine when you only "
"have a few packages in your workspace, but when there are many packages, "
"``colcon build`` can take a long time."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:290
msgid "To build only the ``my_package`` package next time, you can run:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:297
msgid "3 Source the setup file"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:299
msgid ""
"To use your new package and executable, first open a new terminal and "
"source your main ROS 2 installation."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:301
msgid ""
"Then, from inside the ``dev_ws`` directory, run the following command to "
"source your workspace:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:323
msgid ""
"Now that your workspace has been added to your path, you will be able to "
"use your new package’s executables."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:326
msgid "4 Use the package"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:328
msgid ""
"To run the executable you created using the ``--node-name`` argument "
"during package creation, enter the command:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:334
msgid "Which will return a message to your terminal:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:351
msgid "5 Examine package contents"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:353
msgid ""
"Inside ``dev_ws/src/my_package``, you will see the files and folders that"
" ``ros2 pkg create`` automatically generated:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:363
msgid ""
"``my_node.cpp`` is inside the ``src`` directory. This is where all your "
"custom C++ nodes will go in the future."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:372
msgid ""
"``my_node.py`` is inside the ``my_package`` directory. This is where all "
"your custom Python nodes will go in the future."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:376
msgid "6 Customize package.xml"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:378
msgid ""
"You may have noticed in the return message after creating your package "
"that the fields ``description`` and ``license`` contain ``TODO`` notes. "
"That’s because the package description and license declaration are not "
"automatically set, but are required if you ever want to release your "
"package. The ``maintainer`` field may also need to be filled in."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:382
msgid ""
"From ``dev_ws/src/my_package``, open ``package.xml`` using your preferred"
" text editor:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:436
msgid ""
"Input your name and email on the ``maintainer`` line if it hasn't been "
"automatically populated for you. Then, edit the ``description`` line to "
"summarize the package:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:443
msgid ""
"Then update the ``license`` line. You can read more about open source "
"licenses `here <https://opensource.org/licenses/alphabetical>`__. Since "
"this package is only for practice, it’s safe to use any license. We use "
"``Apache License 2.0``:"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:451
msgid "Don’t forget to save once you’re done editing."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:453
msgid ""
"Below the license tag, you will see some tag names ending with "
"``_depend``. This is where your ``package.xml`` would list its "
"dependencies on other packages, for colcon to search for. ``my_package`` "
"is simple and doesn’t have any dependencies, but you will see this space "
"being utilized in upcoming tutorials."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:461
msgid "You’re all done for now!"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:465
msgid ""
"The ``setup.py`` file contains the same description, maintainer and "
"license fields as ``package.xml``, so you need to set those as well. They"
" need to match exactly in both files. The version and name "
"(``package_name``) also need to match exactly, and should be "
"automatically populated in both files."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:469
msgid "Open ``setup.py`` with your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:500
msgid ""
"Edit the ``maintainer``, ``maintainer_email``, and ``description`` lines "
"to match ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:502
msgid "Don’t forget to save the file."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:506
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:508
msgid ""
"You’ve created a package to organize your code and make it easy to use "
"for others."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:510
msgid ""
"Your package was automatically populated with the necessary files, and "
"then you used colcon to build it so you can use its executables in your "
"local environment."
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:513
msgid "Next steps"
msgstr ""

#: ../../source/Tutorials/Creating-Your-First-ROS2-Package.rst:515
msgid ""
"Next, let's add something meaningful to a package. You'll start with a "
"simple publisher/subscriber system, which you can choose to write in "
"either :doc:`C++ <./Writing-A-Simple-Cpp-Publisher-And-Subscriber>` or "
":doc:`Python <./Writing-A-Simple-Py-Publisher-And-Subscriber>`."
msgstr ""

