# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# xinetzone <735613050@qq.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 10:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Tutorials/Colcon-Tutorial.rst:8
msgid "Using colcon to build packages"
msgstr "使用 colcon 构建包"

#: ../../source/Tutorials/Colcon-Tutorial.rst:12
msgid "Table of Contents"
msgstr "目录"

#: ../../source/Tutorials/Colcon-Tutorial.rst:14
msgid ""
"This is a brief tutorial of how to create and build a ROS 2 workspace "
"with ``colcon``. It is a practical tutorial and not designed to replace "
"the core documentation."
msgstr ""
"这是一个简单的教程，如何使用  ``colcon`` 创建一个 ROS 2 工作区。"
"这是一个实用的教程，而不是设计来取代核心文档。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:18
msgid "Background"
msgstr "背景"

#: ../../source/Tutorials/Colcon-Tutorial.rst:20
msgid ""
"``colcon`` is an iteration on the ROS build tools ``catkin_make``, "
"``catkin_make_isolated``, ``catkin_tools`` and ``ament_tools``. For more "
"information on the design of colcon see `this document "
"<https://design.ros2.org/articles/build_tool.html>`__."
msgstr ""
"``colcon`` 是对 ROS 构建工具 ``catkin_make``、``catkin_make_isolate``、``catkin_tools`` 和 ``ament_tools`` 的迭代。有关 ``colcon`` 设计的更多信息，"
"请参阅 `此文档 <https://design.ros2.org/articles/build_tool.html>`__。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:23
msgid ""
"The source code can be found in the `colcon GitHub organization "
"<https://github.com/colcon>`__."
msgstr ""
"源代码可以在 `colcon GitHub <https://github.com/colcon>`__ 组织中找到。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:26
msgid "Prerequisites"
msgstr "先决条件"

#: ../../source/Tutorials/Colcon-Tutorial.rst:29
msgid "Install colcon"
msgstr "安装 colcon"

#: ../../source/Tutorials/Colcon-Tutorial.rst:33
#: ../../source/Tutorials/Colcon-Tutorial.rst:87
#: ../../source/Tutorials/Colcon-Tutorial.rst:164
#: ../../source/Tutorials/Colcon-Tutorial.rst:205
#: ../../source/Tutorials/Colcon-Tutorial.rst:237
#: ../../source/Tutorials/Colcon-Tutorial.rst:304
#: ../../source/Tutorials/Colcon-Tutorial.rst:332
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Colcon-Tutorial.rst:39
#: ../../source/Tutorials/Colcon-Tutorial.rst:94
#: ../../source/Tutorials/Colcon-Tutorial.rst:170
#: ../../source/Tutorials/Colcon-Tutorial.rst:211
#: ../../source/Tutorials/Colcon-Tutorial.rst:243
#: ../../source/Tutorials/Colcon-Tutorial.rst:311
#: ../../source/Tutorials/Colcon-Tutorial.rst:338
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Colcon-Tutorial.rst:45
#: ../../source/Tutorials/Colcon-Tutorial.rst:101
#: ../../source/Tutorials/Colcon-Tutorial.rst:176
#: ../../source/Tutorials/Colcon-Tutorial.rst:217
#: ../../source/Tutorials/Colcon-Tutorial.rst:249
#: ../../source/Tutorials/Colcon-Tutorial.rst:318
#: ../../source/Tutorials/Colcon-Tutorial.rst:344
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Colcon-Tutorial.rst:53
msgid "Install ROS 2"
msgstr "安装 ROS 2"

#: ../../source/Tutorials/Colcon-Tutorial.rst:55
msgid "To build the samples, you will need to install ROS 2."
msgstr "为了构建样本，您将需要安装 ROS 2。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:57
msgid "Follow the `installation instructions <../Installation>`."
msgstr "按照 `安装说明 <../Installation>` 操作。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:59
msgid ""
"If installing from Debian packages, this tutorial requires the `desktop "
"installation <linux-install-debians-install-ros-2-packages>`."
msgstr ""
"如果使用 Debian 软件包进行安装，本教程要求进行 `桌面安装 <linux-install-debians-install-ros-2-packages>`。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:62
msgid "Basics"
msgstr "基础"

#: ../../source/Tutorials/Colcon-Tutorial.rst:64
msgid ""
"A ROS workspace is a directory with a particular structure. Commonly "
"there is a ``src`` subdirectory. Inside that subdirectory is where the "
"source code of ROS packages will be located. Typically the directory "
"starts otherwise empty."
msgstr ""
"ROS 工作区是具有特定结构的目录。通常有一个 ``src`` 子目录。"
"在这个子目录中是存放 ROS 包源代码的地方。通常情况下，目录启动时为空。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:69
msgid ""
"colcon does out of source builds. By default it will create the following"
" directories as peers of the ``src`` directory:"
msgstr ""
"``colcon`` 是基于源代码构建的。"
"默认情况下，它将创建以下目录作为 ``src`` 目录的对等体："

#: ../../source/Tutorials/Colcon-Tutorial.rst:72
msgid ""
"The ``build`` directory will be where intermediate files are stored. For "
"each package a subfolder will be created in which e.g. CMake is being "
"invoked."
msgstr ""
"``build`` 目录将是存储中间文件的地方。"
"对于每个包，将创建一个子文件夹，例如 CMake 被调用。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:74
msgid ""
"The ``install`` directory is where each package will be installed to. By "
"default each package will be installed into a separate subdirectory."
msgstr ""
"``install`` 目录是每个包将要安装到的目录。"
"默认情况下，每个包将被安装到单独的子目录中。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:76
msgid ""
"The ``log`` directory contains various logging information about each "
"colcon invocation."
msgstr ""
"``log`` 目录包含关于每个 ``colcon`` 调用的各种日志信息。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:78
msgid "Compared to catkin there is no ``devel`` directory."
msgstr "与 ``catkin`` 相比，没有 ``devel`` 目录。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:81
msgid "Create a workspace"
msgstr "创建工作区"

#: ../../source/Tutorials/Colcon-Tutorial.rst:83
msgid "First, create a directory (``ros2_example_ws``) to contain our workspace:"
msgstr "首先，创建一个目录（``ros2_example_ws``）来包含我们的工作区："

#: ../../source/Tutorials/Colcon-Tutorial.rst:108
msgid "At this point the workspace contains a single empty directory ``src``:"
msgstr "此时，工作区包含一个空目录 ``src``："

#: ../../source/Tutorials/Colcon-Tutorial.rst:118
msgid "Add some sources"
msgstr "添加一些源文件"

#: ../../source/Tutorials/Colcon-Tutorial.rst:120
msgid ""
"Let's clone the `examples <https://github.com/ros2/examples>`__ "
"repository into the ``src`` directory of the workspace:"
msgstr ""
"让我们将 `示例 <https://github.com/ros2/examples>`__ 库克隆到工作区的 ``src`` 目录中："

#: ../../source/Tutorials/Colcon-Tutorial.rst:126
msgid "Now the workspace should have the source code to the ROS 2 examples:"
msgstr "现在工作区应该有 ROS 2 示例的源代码："

#: ../../source/Tutorials/Colcon-Tutorial.rst:142
msgid "Source an underlay"
msgstr "激活覆盖层"

#: ../../source/Tutorials/Colcon-Tutorial.rst:144
msgid ""
"It is important that we have sourced the environment for an existing ROS "
"2 installation that will provide our workspace with the necessary build "
"dependencies for the example packages. This is achieved by sourcing the "
"setup script provided by a binary installation or a source installation, "
"ie. another colcon workspace (see `Installation <../Installation>`). We "
"call this environment an **underlay**."
msgstr ""
"重要的是，我们已经为现有的 ROS 2 安装提供了环境，它将为示例包提供必要的构建依赖。"
"这是通过获取二进制安装或源安装提供的安装脚本来实现的。"
"另一个 ``colcon`` 工作区（请参阅 `安装 <../Installation>`）。"
"我们称这种环境为 **底层** （underlay）。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:148
msgid ""
"Our workspace, ``ros2_examples_ws``, will be an **overlay** on top of the"
" existing ROS 2 installation. In general, it is recommended to use an "
"overlay when you plan to iterate on a small number of packages, rather "
"than putting all of your packages into the same workspace."
msgstr ""
"我们的工作区，``ros2_examples_ws``，将覆盖在现有的 ROS 2 安装之上。"
"通常，当您计划在少量包上进行迭代时，建议使用覆盖，"
"而不是将所有包放到同一个工作区中。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:152
msgid "Build the workspace"
msgstr "构建工作区"

#: ../../source/Tutorials/Colcon-Tutorial.rst:156
msgid ""
"To build packages on Windows you need to be in a Visual Studio "
"environment, see `Building the ROS 2 Code <windows-dev-build-ros2>` for "
"more details."
msgstr ""
"要在 Windows 上构建包，你需要在 Visual Studio 环境中，"
"参见构建 `ROS 2 代码 <windows-dev-build-ros2>` 了解更多细节。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:158
msgid ""
"In the root of the workspace, run ``colcon build``. Since build types "
"such as ``ament_cmake`` do not support the concept of the ``devel`` space"
" and require the package to be installed, colcon supports the option "
"``--symlink-install``. This allows the installed files to be changed by "
"changing the files in the ``source`` space (e.g. Python files or other "
"not compiled resourced) for faster iteration."
msgstr ""
"在工作区的根目录下，运行 ``colcon build``。"
"因为像 ``ament_cmake`` 这样的构建类型不支持 ``devel`` 空间的概念，"
"并且需要安装包，所以 ``colcon`` 支持 ``--symlink-install`` 选项。"
"这允许通过更改 ``source`` 空间中的文件（例如 Python 文件或其他未编译资源）"
"来更改已安装的文件，以更快地迭代。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:182
msgid ""
"Windows doesn’t allow long paths, so ``merge-install`` will combine all "
"the paths into the ``install`` directory."
msgstr ""
"Windows 不允许长路径，所以 ``merge-install`` 将把所有路径合并到安装目录中。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:184
msgid ""
"After the build is finished, we should see the ``build``, ``install``, "
"and ``log`` directories:"
msgstr "在构建完成后，我们应该看到 ``build``、``install`` 和 ``log`` 目录："

#: ../../source/Tutorials/Colcon-Tutorial.rst:199
msgid "Run tests"
msgstr "运行测试"

#: ../../source/Tutorials/Colcon-Tutorial.rst:201
msgid "To run tests for the packages we just built, run the following:"
msgstr "要对我们刚刚构建的包运行测试，请运行以下命令："

#: ../../source/Tutorials/Colcon-Tutorial.rst:219
msgid ""
"Remember to use a ``x64 Native Tools Command Prompt for VS 2019`` for "
"executing the following command, as we are going to build a workspace."
msgstr ""
"记住使用 ``x64 Native Tools Command Prompt for VS 2019`` 来执行以下命令，"
"因为我们将构建一个工作区。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:225
msgid ""
"You also need to specify ``--merge-install`` here since we used it for "
"building above."
msgstr ""
"您还需要在这里指定 ``--merge-install``，因为我们在上面构建时使用了它。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:228
msgid "Source the environment"
msgstr "激活环境"

#: ../../source/Tutorials/Colcon-Tutorial.rst:230
msgid ""
"When colcon has completed building successfully, the output will be in "
"the ``install`` directory. Before you can use any of the installed "
"executables or libraries, you will need to add them to your path and "
"library paths. colcon will have generated bash/bat files in the "
"``install`` directory to help setup the environment. These files will add"
" all of the required elements to your path and library paths as well as "
"provide any bash or shell commands exported by packages."
msgstr ""
"当 ``colcon`` 成功地完成构建时，输出将位于 ``install`` 目录中。"
"在使用任何已安装的可执行文件或库之前，您需要将它们添加到您的路径和库路径中。"
"colcon 将在 ``install`` 目录中生成 ``bash/bat`` 文件，以帮助设置环境。"
"这些文件将向您的路径和库路径中添加所有必需的元素，"
"并提供由包导出的 bash 或 shell 命令。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:255
msgid "Or with Powershell:"
msgstr "或 Powershell："

#: ../../source/Tutorials/Colcon-Tutorial.rst:262
msgid "Try a demo"
msgstr "尝试演示"

#: ../../source/Tutorials/Colcon-Tutorial.rst:264
msgid ""
"With the environment sourced we can run executables built by colcon. "
"Let's run a subscriber node from the examples:"
msgstr ""
"有了环境源，我们可以运行由 ``colcon`` 构建的可执行文件。"
"让我们运行示例中的订阅服务器节点："

#: ../../source/Tutorials/Colcon-Tutorial.rst:271
msgid ""
"In another terminal, let's run a publisher node (don't forget to source "
"the setup script):"
msgstr ""
"在另一个终端中，让我们运行一个发布者节点（不要忘记获取设置脚本的源代码）："

#: ../../source/Tutorials/Colcon-Tutorial.rst:277
msgid ""
"You should see messages from the publisher and subscriber with numbers "
"incrementing."
msgstr "您应该看到来自发布者和订阅者的消息，消息的数量在递增。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:280
msgid "Create your own package"
msgstr "创建您自己的包"

#: ../../source/Tutorials/Colcon-Tutorial.rst:282
msgid ""
"colcon uses the ``package.xml`` specification defined in `REP 149 "
"<https://www.ros.org/reps/rep-0149.html>`__ (`format 2 "
"<https://www.ros.org/reps/rep-0140.html>`__ is also supported)."
msgstr ""
"``colcon`` 使用 `REP 149 <https://www.ros.org/reps/rep-0149.html>`__ "
"中定义的 ``package.xml`` 规范"
"（也支持 `格式 2 <https://www.ros.org/reps/rep-0140.html>`__）。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:284
msgid ""
"colcon supports multiple build types. The recommended build types are "
"``ament_cmake`` and ``ament_python``. Also supported are pure ``cmake`` "
"packages."
msgstr ""
"``colcon`` 支持多种构建类型。"
"推荐的构建类型是 ``ament_cmake`` 和 ``ament_python``。"
"也支持纯 ``cmake`` 包。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:288
msgid ""
"An example of an ``ament_python`` build is the `ament_index_python "
"package "
"<https://github.com/ament/ament_index/tree/master/ament_index_python>`__ "
", where the setup.py is the primary entry point for building."
msgstr ""
"``ament_python`` 构建的一个例子是 `ament_index_python 包 "
"<https://github.com/ament/ament_index/tree/master/ament_index_python>`__，"
"其中 ``setup.py`` 是构建的主要入口点。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:290
msgid ""
"A package such as `demo_nodes_cpp "
"<https://github.com/ros2/demos/tree/master/demo_nodes_cpp>`__ uses the "
"``ament_cmake`` build type, and uses CMake as the build tool."
msgstr ""
"像 `demo_nodes_cpp "
"<https://github.com/ros2/demos/tree/master/demo_nodes_cpp>`__ "
"这样的包使用 ``ament_cmake`` 构建类型，并使用 CMake 作为构建工具。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:292
msgid ""
"For convenience, you can use the tool ``ros2 pkg create`` to create a new"
" package based on a template."
msgstr ""
"为了方便起见，您可以使用工具 ``ros2 pkg create`` 来基于模板创建一个新的包。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:294
msgid "For ``catkin`` users, this is the equivalent of ``catkin_create_package``."
msgstr "对于 ``catkin`` 用户，这相当于 ``catkin_create_package``。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:297
msgid "Setup ``colcon_cd``"
msgstr "设置 ``colcon_cd``"

#: ../../source/Tutorials/Colcon-Tutorial.rst:299
msgid ""
"The command ``colcon_cd`` allows you to quickly change the current "
"working directory of your shell to the directory of a package. As an "
"example ``colcon_cd some_ros_package`` would quickly bring you to the "
"directory ``~/ros2_install/src/some_ros_package``."
msgstr ""
"命令 ``colcon_cd`` 允许你快速地将 shell 的当前工作目录改为软件包的目录。"
"例如 ``colcon_cd some_ros_package`` 可以迅速将你带到 "
"``~/ros2_install/src/some_ros_package`` 目录下。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:320
#: ../../source/Tutorials/Colcon-Tutorial.rst:346
msgid "Not yet available"
msgstr "尚未提供"

#: ../../source/Tutorials/Colcon-Tutorial.rst:322
msgid ""
"Depending to the way you installed ``colcon_cd`` and where your workspace"
" is, the instructions above may vary, please refer to `the documentation "
"<https://colcon.readthedocs.io/en/released/user/installation.html#quick-"
"directory-changes>`__ for more details. To undo this in Linux and macOS, "
"locate your system’s shell startup script and remove the appended source "
"and export commands."
msgstr ""
"根据你安装 ``colcon_cd`` 的方式和你工作区的位置，上面的说明可能会有所不同，"
"请参考 `文档 "
"<https://colcon.readthedocs.io/en/released/user/installation.html#quick-"
"directory-changes>`__ 了解更多细节。在 Linux 和 macOS 中，要撤销这一点，"
"请找到你的系统的 shell 启动脚本，删除附加的 source 和 export 命令。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:326
msgid "Setup ``colcon`` tab completion"
msgstr "设置 ``colcon`` tab 自动补全"

#: ../../source/Tutorials/Colcon-Tutorial.rst:328
msgid ""
"The command ``colcon`` `supports command completion "
"<https://colcon.readthedocs.io/en/released/user/installation.html#enable-"
"completion>`__ for bash and bash-like shells if the ``colcon-"
"argcomplete`` package is installed."
msgstr ""
"如果安装了 ``colcon-argcomplete`` 软件包，``colcon`` 命令 `支持 bash 和 "
"bash-like shell 的命令自动补全 "
"<https://colcon.readthedocs.io/en/released/user/installation.html#enable-"
"completion>`__。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:348
msgid ""
"Depending to the way you installed ``colcon`` and where your workspace "
"is, the instructions above may vary, please refer to `the documentation "
"<https://colcon.readthedocs.io/en/released/user/installation.html>`__ for"
" more details. To undo this in Linux and macOS, locate your system’s "
"shell startup script and remove the appended source command."
msgstr ""
"根据你安装 ``colcon`` 的方式和你的工作区的位置，上面的说明可能会有所不同，"
"请参考 `文档 <https://colcon.readthedocs.io/en/released/user/installation.html>`__ "
"了解更多细节。在 Linux 和 macOS 中，要撤销这一点，"
"请找到你的系统的 shell 启动脚本，删除附加的源命令。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:352
msgid "Tips"
msgstr "小贴士"

#: ../../source/Tutorials/Colcon-Tutorial.rst:354
msgid ""
"If you do not want to build a specific package place an empty file named "
"``COLCON_IGNORE`` in the directory and it will not be indexed."
msgstr ""
"如果您不想构建一个特定的包，那么在目录中放置一个名为 ``COLCON_IGNORE`` 的空文件，它将不会被索引。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:356
msgid ""
"If you want to avoid configuring and building tests in CMake packages you"
" can pass: ``--cmake-args -DBUILD_TESTING=0``."
msgstr ""
"如果你想避免在 CMake 包中配置和构建测试，你可以通过：``--cmake-args -DBUILD_TESTING=0``。"

#: ../../source/Tutorials/Colcon-Tutorial.rst:358
msgid "If you want to run a single particular test from a package:"
msgstr "如果你想从一个包中运行一个特定的测试："
