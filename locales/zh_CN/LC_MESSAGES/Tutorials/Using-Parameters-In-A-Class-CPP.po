# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 10:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:4
msgid "Using parameters in a class (C++)"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:6
msgid "**Goal:** Create and run a class with ROS parameters using C++."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:8
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:10
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:14
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:17
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:19
msgid ""
"When making your own :doc:`nodes <./Understanding-ROS2-Nodes>` you will "
"sometimes need to add parameters that can be set from the launch file."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:21
msgid ""
"This tutorial will show you how to create those parameters in a C++ "
"class, and how to set them in a launch file."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:24
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:26
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace "
"<./Workspace/Creating-A-Workspace>` and :doc:`create a package "
"<./Creating-Your-First-ROS2-Package>`. You have also learned about "
":doc:`parameters <./Parameters/Understanding-ROS2-Parameters>` and their "
"function in a ROS 2 system."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:30
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:32
msgid "1 Create a package"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:34
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation "
"<./Configuring-ROS2-Environment>` so that ``ros2`` commands will work."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:36
msgid ""
"Navigate into the ``dev_ws`` directory created in a :ref:`previous "
"tutorial <new-directory>`."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:38
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. Navigate into ``dev_ws/src`` and create a new "
"package:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:45
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``cpp_parameters`` and all its necessary files and folders."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:47
msgid ""
"The ``--dependencies`` argument will automatically add the necessary "
"dependency lines to ``package.xml`` and ``CMakeLists.txt``."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:50
msgid "1.1 Update ``package.xml``"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:52
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you donâ€™t have to manually add dependencies to ``package.xml`` or "
"``CMakeLists.txt``."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:54
msgid ""
"As always, though, make sure to add the description, maintainer email and"
" name, and license information to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:63
msgid "2 Write the C++ node"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:65
msgid ""
"Inside the ``dev_ws/src/cpp_parameters/src`` directory, create a new file"
" called ``cpp_parameters_node.cpp`` and paste the following code within:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:105
msgid "2.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:106
msgid "The ``#include`` statements at the top are the package dependencies."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:108
msgid ""
"The next piece of code creates the class and the constructor. The first "
"line of this constructor creates our parameter. Our parameter has the "
"name ``my_parameter`` and is assigned the default value ``world``. Next, "
"``timer_`` is initialized, which causes the ``respond`` function to be "
"executed once a second."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:126
msgid ""
"The first line of our ``respond`` function gets the parameter "
"``my_parameter`` from the node, and stores it in ``parameter_string_``. "
"The ``RCLCPP_INFO`` function ensures the message is logged."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:137
msgid "Last is the declaration of ``timer_`` and ``parameter_string_``"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:145
msgid ""
"Following our ``ParametersClass`` is our ``main``. Here ROS 2 is "
"initialized, and ``rclcpp::spin`` starts processing data from the node."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:160
msgid "2.2 Add executable"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:162
msgid ""
"Now open the ``CMakeLists.txt`` file. Below the dependency "
"``find_package(rclcpp REQUIRED)`` add the following lines of code."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:176
msgid "3 Build and run"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:178
msgid ""
"It's good practice to run ``rosdep`` in the root of your workspace "
"(``dev_ws``) to check for missing dependencies before building:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:182
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:200
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:222
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:330
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:352
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:188
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:206
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:228
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:336
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:358
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:190
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:194
msgid "rosdep only runs on Linux, so you can skip ahead to next step."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:192
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:212
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:234
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:342
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:364
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:196
msgid ""
"Navigate back to the root of your workspace, ``dev_ws``, and build your "
"new package:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:218
msgid "Open a new terminal, navigate to ``dev_ws``, and source the setup files:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:240
msgid "Now run the node:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:246
#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:376
msgid "The terminal should return the following message every second:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:252
msgid ""
"Now you can see the default value of your parameter, but you want to be "
"able to set it yourself. There are two ways to accomplish this."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:256
msgid "3.1 Change via the console"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:258
msgid ""
"This part will use the knowledge you have gained from the :doc:`tutorial "
"about parameters <./Parameters/Understanding-ROS2-Parameters>` and apply "
"it to the node you have just created."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:260
msgid "Make sure the node is running:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:266
msgid ""
"Open another terminal, source the setup files from inside ``dev_ws`` "
"again, and enter the following line:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:272
msgid ""
"There you will see the custom parameter ``my_parameter``. To change it "
"simply run the following line in the console:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:279
msgid ""
"You know it went well if you get the output ``Set parameter successful``."
" If you look at the other terminal, you should see the output change to "
"``[INFO] [parameter_node]: Hello earth``"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:283
msgid "3.2 Change via a launch file"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:284
msgid ""
"You can also set the parameter in a launch file, but first you will need "
"to add the launch directory. Inside the ``dev_ws/src/cpp_parameters/`` "
"directory, create a new directory called ``launch``. In there, create a "
"new file called ``cpp_parameters_launch.py``"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:308
msgid ""
"Here you can see that we set ``my_parameter`` to ``earth`` when we launch"
" our node ``parameter_node``. By adding the two lines below, we ensure "
"our output is printed in our console."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:316
msgid ""
"Now open the ``CMakeLists.txt`` file. Below the lines you added earlier, "
"add the following lines of code."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:326
msgid ""
"Open a console and navigate to the root of your workspace, ``dev_ws``, "
"and build your new package:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:348
msgid "Then source the setup files in a new terminal:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:370
msgid "Now run the node using the launch file we have just created:"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:383
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:385
msgid ""
"You created a node with a custom parameter, that can be set either from a"
" launch file or the command line. You added the dependencies, "
"executables, and a launch file to the package configuration files so that"
" you could build and run them, and see the parameter in action."
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:389
msgid "Next steps"
msgstr ""

#: ../../source/Tutorials/Using-Parameters-In-A-Class-CPP.rst:391
msgid ""
"Now that you have some packages and ROS 2 systems of your own, the "
":doc:`next tutorial <./Getting-Started-With-Ros2doctor>` will show you "
"how to examine issues in your environment and systems in case you have "
"problems."
msgstr ""

