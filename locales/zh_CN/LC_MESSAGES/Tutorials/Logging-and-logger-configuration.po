# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 10:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:6
msgid "Logging and logger configuration demo"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:8
msgid ""
"See `the logging page <../Concepts/About-Logging>` for details on "
"available functionality."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:10
msgid ""
"In this demo, different types of log calls are shown and the severity "
"level of different loggers is configured locally and externally."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:12
msgid "Start the demo with:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:18
msgid ""
"Over time you will see output from various log calls with different "
"properties. To start with you will only see output from log calls with "
"severity ``INFO`` and above (``WARN``, ``ERROR``, ``FATAL``). Note that "
"the first message will only be logged once, though the line is reached on"
" each iteration, as that is a property of the log call used for that "
"message."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:23
msgid "Logging directory configuration"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:25
msgid ""
"The logging directory can be configured through two environment "
"variables: ``ROS_LOG_DIR`` and ``ROS_HOME``. The logic is as follows:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:28
msgid "Use ``$ROS_LOG_DIR`` if ``ROS_LOG_DIR`` is set and not empty."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:29
msgid ""
"Otherwise, use ``$ROS_HOME/log``, using ``~/.ros`` for ``ROS_HOME`` if "
"not set or if empty."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:31
msgid "For example, to set the logging directory to ``~/my_logs``:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:35
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:65
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:193
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:224
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:260
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:289
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:42
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:72
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:199
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:230
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:266
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:295
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:49
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:79
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:205
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:236
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:272
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:301
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:56
msgid "You will then find the logs under ``~/my_logs/``."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:58
msgid ""
"Alternatively, you can set ``ROS_HOME`` and the logging directory will be"
" relative to it (``$ROS_HOME/log``). ``ROS_HOME`` is intended to be used "
"by anything that needs a base directory. Note that ``ROS_LOG_DIR`` has to"
" be either unset or empty. For example, with ``ROS_HOME`` set to "
"``~/my_ros_home``:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:86
msgid "You will then find the logs under ``~/my_ros_home/log/``."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:89
msgid "Logger level configuration: programmatically"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:91
msgid ""
"After 10 iterations the level of the logger will be set to ``DEBUG``, "
"which will cause additional messages to be logged."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:93
msgid ""
"Some of these debug messages cause additional functions/expressions to be"
" evaluated, which were previously skipped as ``DEBUG`` log calls were not"
" enabled. See `the source code "
"<https://github.com/ros2/demos/blob/master/logging_demo/src/logger_usage_component.cpp>`__"
" of the demo for further explanation of the calls used, and see the "
"rclcpp logging documentation for a full list of supported logging calls."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:97
msgid "Logger level configuration: externally"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:99
msgid ""
"In the future there will be a generalized approach to external "
"configuration of loggers at runtime (similar to how `rqt_logger_level "
"<https://wiki.ros.org/rqt_logger_level>`__ in ROS 1 allows logger "
"configuration via remote procedural calls). **This concept is not yet "
"officially supported in ROS 2.** In the meantime, this demo provides an "
"**example** service that can be called externally to request "
"configuration of logger levels for known names of loggers in the process."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:103
msgid ""
"The demo previously started is already running this example service. To "
"set the level of the demo's logger back to ``INFO``\\ , call the service "
"with:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:110
msgid ""
"This service call will work on any logger that is running in the process "
"provided that you know its name. This includes the loggers in the ROS 2 "
"core, such as ``rcl`` (the common client library package). To enable "
"debug logging for ``rcl``, call:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:118
msgid "You should see debug output from ``rcl`` start to show."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:121
msgid "Using the logger config component"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:123
msgid ""
"The server that responds to the logger configuration requests has been "
"developed as a component so that it may be added to an existing "
"composition-based system. For example, if you are using `a container to "
"run your nodes <Composition>`, to be able to configure your loggers you "
"only need to request that it additionally load the "
"``logging_demo::LoggerConfig`` component into the container."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:126
msgid ""
"As an example, if you want to debug the ``composition::Talker`` demo, you"
" can start the talker as normal with:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:128
msgid "Shell 1:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:134
#: ../../source/Tutorials/Logging-and-logger-configuration.rst:151
msgid "Shell 2:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:140
msgid ""
"And then when you want to enable debug logging, load the ``LoggerConfig``"
" component with:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:142
msgid "Shell 2"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:148
msgid ""
"And finally, configure all unset loggers to the debug severity by "
"addressing the empty-named logger. Note that loggers that have been "
"specifically configured to use a particular severity will not be affected"
" by this call."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:157
msgid ""
"You should see debug output from any previously unset loggers in the "
"process start to appear, including from the ROS 2 core."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:160
msgid "Logger level configuration: command line"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:162
msgid ""
"As of the Bouncy ROS 2 release, the severity level for loggers that have "
"not had their severity set explicitly can be configured from the command "
"line. Restart the demo including the following command line argument:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:170
msgid ""
"This configures the default severity for any unset logger to the debug "
"severity level. You should see debug output from loggers from the demo "
"itself and from the ROS 2 core."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:173
msgid ""
"As of the Galactic ROS 2 release, the severity level for individual "
"loggers can be configured from the command-line. Restart the demo "
"including the following command line arguments:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:178
msgid "Galactic and newer"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:186
msgid "Console output formatting"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:188
msgid ""
"If you would like more or less verbose formatting, you can use "
"RCUTILS_CONSOLE_OUTPUT_FORMAT environment variable. For example, to "
"additionally get the timestamp and location of the log calls, stop the "
"demo and restart it with the environment variable set:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:212
msgid ""
"You should see the timestamp in seconds and the function name, filename "
"and line number additionally printed with each message. *The ``time`` "
"option is only supported as of the ROS 2 Bouncy release.*"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:216
msgid "Console output colorizing"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:218
msgid ""
"By default, the output is colorized when it's targeting a terminal. If "
"you would like to force enabling or disabling it, you can use the "
"``RCUTILS_COLORIZED_OUTPUT`` environment variable. For example:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:243
msgid ""
"You should see that debug, warn, error and fatal logs aren't colorized "
"now."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:247
msgid ""
"In Linux and MacOS forcing colorized output means that if you redirect "
"the output to a file, the ansi escape color codes will appear on it. In "
"windows the colorization method relies on console APIs. If it is forced "
"you will get a new warning saying that colorization failed. The default "
"behavior already checks if the output is a console or not, so forcing "
"colorization is not recommended."
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:253
msgid "Default stream for console output"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:255
msgid ""
"In Foxy and later, the output from all debug levels goes to stderr by "
"default.  It is possible to force all output to go to stdout by setting "
"the ``RCUTILS_LOGGING_USE_STDOUT`` environment variable to ``1``. For "
"example:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:280
msgid "Line buffered console output"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:283
msgid ""
"By default, all logging output is unbuffered. You can force it to be "
"buffered by setting the ``RCUTILS_LOGGING_BUFFERED_STREAM`` environment "
"variable to 1. For example:"
msgstr ""

#: ../../source/Tutorials/Logging-and-logger-configuration.rst:307
msgid "Then run:"
msgstr ""

