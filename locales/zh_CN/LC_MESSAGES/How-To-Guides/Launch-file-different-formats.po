# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 10:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:6
msgid "Using Python, XML, and YAML for ROS 2 Launch Files"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:10
msgid "Table of Contents"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:12
msgid ""
"ROS 2 launch files can be written in Python, XML, and YAML. This guide "
"shows how to use these different formats to accomplish the same task, as "
"well as has some discussion on when to use each format."
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:16
msgid "Launch file examples"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:18
msgid ""
"Below is a launch file implemented in Python, XML, and YAML. Each launch "
"file performs the following actions:"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:21
msgid "Setup command line arguments with defaults"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:22
msgid "Include another launch file"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:23
msgid "Include another launch file in another namespace"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:24
msgid "Start a node and setting its namespace"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:25
msgid ""
"Start a node, setting its namespace, and setting parameters in that node "
"(using the args)"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:26
msgid "Create a node to remap messages from one topic to another"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:30
msgid "Python"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:133
msgid "XML"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:172
msgid "YAML"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:244
msgid "Using the Launch files from the command line"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:247
msgid "Launching"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:249
msgid ""
"Any of the launch files above can be run with ``ros2 launch``. To try "
"them locally, you can either create a new package and use"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:256
msgid "or run the file directly by specifying the path to the launch file"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:263
msgid "Setting arguments"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:265
msgid ""
"To set the arguments that are passed to the launch file, you should use "
"``key:=value`` syntax. For example, you can set the value of "
"``background_r`` in the following way:"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:272
msgid "or"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:279
msgid "Controlling the turtles"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:281
msgid ""
"To test that the remapping is working, you can control the turtles by "
"running the following command in another terminal:"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:289
msgid "Python, XML, or YAML: Which should I use?"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:293
msgid ""
"Launch files in ROS 1 were written in XML, so XML may be the most "
"familiar to people coming from ROS 1. To see what's changed, you can "
"visit :doc:`Launch-files-migration-guide`."
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:296
msgid ""
"For most applications the choice of which ROS 2 launch format comes down "
"to developer preference. However, if your launch file requires "
"flexibility that you cannot achieve with XML or YAML, you can use Python "
"to write your launch file. Using Python for ROS 2 launch is more flexible"
" because of following two reasons:"
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:300
msgid ""
"Python is a scripting language, and thus you can leverage the language "
"and its libraries in your launch files."
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:301
msgid ""
"`ros2/launch <https://github.com/ros2/launch>`_ (general launch features)"
" and `ros2/launch_ros <https://github.com/ros2/launch_ros>`_ (ROS 2 "
"specific launch features) are written in Python and thus you have lower "
"level access to launch features that may not exposed by XML and YAML."
msgstr ""

#: ../../source/How-To-Guides/Launch-file-different-formats.rst:303
msgid ""
"That being said, a launch file written in Python may be more complex and "
"verbose than one in XML or YAML."
msgstr ""

