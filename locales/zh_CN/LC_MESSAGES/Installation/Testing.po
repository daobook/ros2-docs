# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# xinetzone <735613050@qq.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 10:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Installation/Testing.rst:6
msgid "Alternative Installation Sources for Testing"
msgstr "用于测试的替代安装源"

#: ../../source/Installation/Testing.rst:8
msgid ""
"Many ROS packages are provided as pre-built binaries. Usually, you will "
"get the released version of binaries when following "
":doc:`../Installation`. There are also pre-released versions of binaries "
"that are useful for testing before making an official release. This "
"article describes several options if you would like to try out pre-"
"released versions of ROS binaries."
msgstr ""
"许多 ROS 软件包都是以预构建的二进制文件形式提供的。"
"通常情况下，当你遵循 :doc:`../Installation` 时，你会得到二进制文件的发布版本。"
"还有一些预发布版本的二进制文件，在进行正式发布之前，对测试很有用。"
"如果你想尝试预发布版本的 ROS 二进制文件，本文描述了几种选择。"

#: ../../source/Installation/Testing.rst:14
msgid "Debian testing repository"
msgstr "Debian 测试库"

#: ../../source/Installation/Testing.rst:16
msgid ""
"When packages are released into a ROS distribution (using bloom), the "
"buildfarm builds them into debian packages which are stored temporarily "
"in the **building** apt repository. As dependent packages are rebuilt, an"
" automatic process periodically synchronizes the packages in **building**"
" to a secondary repository called **ros-testing**. **ros-testing** is "
"intended as a soaking area where developers and bleeding-edge users may "
"give the packages extra testing, before they are manually synced into the"
" public ros repository from which users typically install packages."
msgstr ""
"当软件包被发布到 ROS 发行版中时（使用 bloom），buildfarm 会将它们构建成 debian 软件包，"
"并暂时存储在 **building** apt 仓库中。"
"随着依赖性软件包的重建，一个自动程序会定期将 **building** 中的软件包同步到一个名为 **ros-testing** 的辅助仓库。"
"**ros-testing** 的目的是作为一个 soaking 区，开发人员和边缘用户可以给软件包提供额外的测试，"
"然后再手动同步到用户通常安装软件包的公共 ros 仓库。"

#: ../../source/Installation/Testing.rst:20
msgid ""
"Approximately every two weeks, the rosdistro's release manager manually "
"synchronizes the contents of **ros-testing** into the **main** ROS "
"repository."
msgstr ""
"大约每两周，rosdistro 的发布经理会手动将 **ros-testing** 的内容同步到 **main** ROS 仓库。"

#: ../../source/Installation/Testing.rst:22
msgid ""
"For Debian-based operating systems, you can install binary packages from "
"the **ros-testing** repository."
msgstr ""
"对于基于 Debian 的操作系统，你可以从 **ros-testing** 仓库安装二进制软件包。"

#: ../../source/Installation/Testing.rst:24
msgid ""
"Make sure you have a working ROS 2 installation from Debian packages (see"
" :doc:`../Installation`)."
msgstr ""
"确保你有一个来自 Debian 软件包的有效 ROS 2 安装（见 :doc:`../Installation`）。"

#: ../../source/Installation/Testing.rst:26
msgid ""
"Edit (with sudo) the file ``/etc/apt/sources.list.d/ros2-latest.list`` "
"and change ``ros2`` with ``ros2-testing``. For example, on Ubuntu Focal "
"the contents should look like the following:"
msgstr ""
"编辑（用 sudo）文件 ``/etc/apt/sources.list.d/ros2-latest.list`` 并将 ``ros2`` 改为 ``ros2-testing``。"
"例如，在 Ubuntu Focal 上，其内容应该如下："

#: ../../source/Installation/Testing.rst:34
msgid "Update the ``apt`` index:"
msgstr "更新 ``apt`` 索引："

#: ../../source/Installation/Testing.rst:40
msgid ""
"You can now install individual packages from the testing repository, for "
"example:"
msgstr ""
"你现在可以从测试资源库中安装单个软件包，例如："

#: ../../source/Installation/Testing.rst:46
msgid ""
"Alternatively, you can move your entire ROS 2 installation to the testing"
" repository:"
msgstr ""
"或者，你可以将你的整个 ROS 2 安装转移到测试仓库："

#: ../../source/Installation/Testing.rst:52
msgid ""
"Once you are finished testing, you can switch back to the normal "
"repository by changing back the contents of "
"``/etc/apt/sources.list.d/ros2-latest.list``:"
msgstr ""
"一旦你完成了测试，你可以通过修改 ``/etc/apt/sources.list.d/ros2-latest.list`` 的内容切换回正常版本库："

#: ../../source/Installation/Testing.rst:59
msgid "and doing an update and upgrade:"
msgstr "并进行更新和升级。"

#: ../../source/Installation/Testing.rst:69
msgid "Fat binaries"
msgstr "Fat 二进制文件"

#: ../../source/Installation/Testing.rst:71
msgid ""
"For core packages, we run nightly packaging jobs for Ubuntu Linux, macOS,"
" and Windows. These packaging jobs produce archives with pre-built "
"binaries that can be downloaded and extracted to your filesystem."
msgstr ""
"对于核心软件包，我们每晚为 Ubuntu Linux、macOS 和 Windows 运行打包工作。"
"这些打包工作会产生带有预建二进制文件的档案，可以下载并解压到你的文件系统。"

#: ../../source/Installation/Testing.rst:74
msgid ""
"Make sure you have all dependencies installed according to the "
":doc:`latest development setup <Latest-Development-Setup>` for your "
"platform."
msgstr ""
"确保你已经按照 :doc:`最新的开发设置 <Latest-Development-Setup>` 为你的平台安装了所有的依赖项。"

#: ../../source/Installation/Testing.rst:76
msgid ""
"Go to https://ci.ros2.org/view/packaging/ and select a packaging job from"
" the list corresponding to your platform."
msgstr ""
"进入 https://ci.ros2.org/view/packaging/，从与你的平台相对应的列表中选择一项包装工作。"

#: ../../source/Installation/Testing.rst:78
msgid ""
"Under the heading \"Last Successful Artifacts\" you should see a download"
" link (e.g. for Windows, ``ros2-package-windows-AMD64.zip``)."
msgstr ""
"在 \"Last Successful Artifacts\" 标题下，你应该看到一个下载链接"
"（例如，对于 Windows，``ros2-package-windows-AMD64.zip``）。"

#: ../../source/Installation/Testing.rst:80
msgid "Download and extract the archive to your file system."
msgstr "下载并解压档案到你的文件系统。"

#: ../../source/Installation/Testing.rst:82
msgid ""
"To use the fat binary installation, source the ``setup.*`` file that can "
"be found in the root of the archive."
msgstr ""
"要使用 fat 的二进制安装，请从存档根部的 ``setup.*`` 文件中获取源码。"

#: ../../source/Installation/Testing.rst:86
msgid "Linux"
msgstr ""

#: ../../source/Installation/Testing.rst:92
msgid "macOS"
msgstr ""

#: ../../source/Installation/Testing.rst:98
msgid "Windows"
msgstr ""

#: ../../source/Installation/Testing.rst:105
msgid "Docker"
msgstr ""

#: ../../source/Installation/Testing.rst:107
msgid ""
"For Ubuntu Linux, there is also a nightly Docker image based on the "
"nightly fat archive."
msgstr ""
"对于 Ubuntu Linux，也有一个基于 nightly fat 归档的 Docker 镜像。"

#: ../../source/Installation/Testing.rst:109
msgid "Pull the Docker image:"
msgstr "拉取 Docker 镜像："

#: ../../source/Installation/Testing.rst:115
msgid "Start an interactive container:"
msgstr "启动一个交互式容器："

#: ../../source/Installation/Testing.rst:121
msgid ""
"For support on running GUI applications in Docker, take a look at the "
"tutorial `User GUI's with Docker "
"<https://wiki.ros.org/docker/Tutorials/GUI>`_ or the tool `rocker "
"<https://github.com/osrf/rocker>`_."
msgstr ""
"关于在 Docker 中运行 GUI 应用程序的支持，请看教程 "
"`使用 Docker 的用户图形用户界面 <https://wiki.ros.org/docker/Tutorials/GUI>`_ 或工具 "
"`rocker <https://github.com/osrf/rocker>`_。"
