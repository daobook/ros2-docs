# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 16:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Installation/Windows-Install-Binary.rst:2
msgid "Installing ROS 2 on Windows"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:6
msgid "Table of Contents"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:8
msgid ""
"This page explains how to install ROS 2 on Windows from a pre-built "
"binary package."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:12
msgid ""
"The pre-built binary does not include all ROS 2 packages. All packages in"
" the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ "
"are included, and only a subset of packages in the `ROS desktop variant "
"<https://ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The"
" exact list of packages are described by the repositories listed in `this"
" ros2.repos file "
"<https://github.com/ros2/ros2/blob/galactic/ros2.repos>`_."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:17
msgid "System requirements"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:19
msgid "Only Windows 10 is supported."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:2
msgid "Installing prerequisites"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:5
msgid "Install Chocolatey"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:7
msgid ""
"Chocolatey is a package manager for Windows, install it by following "
"their installation instructions:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:9
msgid "https://chocolatey.org/"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:11
msgid "You'll use Chocolatey to install some other developer tools."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:14
msgid "Install Python"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:16
msgid ""
"Open a Command Prompt and type the following to install Python via "
"Chocolatey:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:23
msgid "Install Visual C++ Redistributables"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:25
msgid ""
"Open a Command Prompt and type the following to install them via "
"Chocolatey:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:32
msgid "Install OpenSSL"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:34
msgid ""
"Download the *Win64 OpenSSL v1.1.1L* OpenSSL installer from `this page "
"<https://slproweb.com/products/Win32OpenSSL.html>`__. Scroll to the "
"bottom of the page and download *Win64 OpenSSL v1.1.1L*. Don't download "
"the Win32 or Light versions."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:38
msgid ""
"Run the installer with default parameters, as the following commands "
"assume you used the default installation directory."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:40
msgid "This command sets an environment variable that persists over sessions:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:46
msgid ""
"You will need to append the OpenSSL-Win64 bin folder to your PATH. You "
"can do this by clicking the Windows icon, typing \"Environment "
"Variables\", then clicking on \"Edit the system environment variables\". "
"In the resulting dialog, click \"Environment Variables\", then click "
"\"Path\" on the bottom pane, finally click \"Edit\" and add the path "
"below."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:50
msgid "``C:\\Program Files\\OpenSSL-Win64\\bin\\``"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:53
msgid "Install Visual Studio"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:55
msgid "Install Visual Studio 2019."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:57
msgid ""
"If you already have a paid version of Visual Studio 2019 (Professional, "
"Enterprise), skip this step."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:59
msgid ""
"Microsoft provides a free of charge version of Visual Studio 2019, named "
"Community, which can be used to build applications that use ROS 2. `You "
"can download the installer directly through this link. "
"<https://visualstudio.microsoft.com/thank-you-downloading-visual-"
"studio/?sku=Community&rel=16&src=myvs&utm_medium=microsoft&utm_source=my.visualstudio.com&utm_campaign=download&utm_content=vs+community+2019>`_"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:62
msgid "Make sure that the Visual C++ features are installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:64
msgid ""
"An easy way to make sure they're installed is to select the ``Desktop "
"development with C++`` workflow during the install."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:68
msgid ""
"Make sure that no C++ CMake tools are installed by unselecting them in "
"the list of components to be installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:71
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:73
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"Eclipse Cyclone DDS, you can find instructions :doc:`here <DDS-"
"Implementations>`."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:76
msgid "Install OpenCV"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:78
msgid "Some of the examples require OpenCV to be installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:80
msgid ""
"You can download a precompiled version of OpenCV 3.4.6 from "
"https://github.com/ros2/ros2/releases/download/opencv-"
"archives/opencv-3.4.6-vc16.VS2019.zip ."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:82
msgid ""
"Assuming you unpacked it to ``C:\\opencv``, type the following on a "
"Command Prompt (requires Admin privileges):"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:88
msgid ""
"Since you are using a precompiled ROS version, we have to tell it where "
"to find the OpenCV libraries. You have to extend the ``PATH`` variable to"
" ``C:\\opencv\\x64\\vc16\\bin``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:92
msgid "Install dependencies"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:94
msgid ""
"There are a few dependencies not available in the Chocolatey package "
"database. In order to ease the manual installation process, we provide "
"the necessary Chocolatey packages."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:97
msgid "As some chocolatey packages rely on it, we start by installing CMake"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:103
msgid ""
"You will need to append the CMake bin folder ``C:\\Program "
"Files\\CMake\\bin`` to your PATH."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:105
msgid ""
"Please download these packages from `this <https://github.com/ros2/choco-"
"packages/releases/latest>`__ GitHub repository."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:107
msgid "asio.1.12.1.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:108
msgid "bullet.2.89.0.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:109
msgid "cunit.2.1.3.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:110
msgid "eigen-3.3.4.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:111
msgid "tinyxml-usestl.2.6.2.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:112
msgid "tinyxml2.6.0.0.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:113
msgid "log4cxx.0.10.0.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:115
msgid ""
"Once these packages are downloaded, open an administrative shell and "
"execute the following command:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:121
msgid ""
"Please replace ``<PATH\\TO\\DOWNLOADS>`` with the folder you downloaded "
"the packages to."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:123
msgid "You must also install some additional python dependencies:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:131
msgid "Install Qt5"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:133
msgid ""
"This section is only required if you are building rviz, but it comes with"
" our default set of sources, so if you don't know, then assume you are "
"building it."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:135
msgid "First get the installer from Qt's website:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:137
msgid "https://www.qt.io/download"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:139
msgid ""
"Select the Open Source version and then the ``Qt Online Installer for "
"Windows``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:141
msgid "Run the installer and install Qt5."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:143
msgid ""
"We recommend you install it to the default location of ``C:\\Qt``, but if"
" you choose somewhere else, make sure to update the paths below "
"accordingly. When selecting components to install, the only thing you "
"absolutely need is the appropriate MSVC 64-bit component under the ``Qt``"
" -> ``Qt 5.15.0`` tree. We're using ``5.15.0`` as of the writing of this "
"document and that's what we recommend since that's all we test on "
"Windows, but later Qt5 versions will probably work too. Be sure to select"
" ``MSVC 2019 64-bit``. After that, the default settings are fine."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:149
msgid ""
"Finally, set the ``Qt5_DIR`` environment variable in the ``cmd.exe`` "
"where you intend to build so that CMake can find it:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:156
msgid ""
"You could set it permanently with ``setx -m Qt5_DIR "
"C:\\Qt\\5.15.0\\msvc2019_64`` and ``setx -m QT_QPA_PLATFORM_PLUGIN_PATH "
"C:\\Qt\\5.15.0\\msvc2019_64\\plugins\\platforms`` instead, but that "
"requires Administrator."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:160
msgid ""
"This path might change based on which MSVC version you're using or if you"
" installed it to a different directory."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:163
msgid "RQt dependencies"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:165
msgid ""
"To run rqt_graph you need to `download "
"<https://graphviz.gitlab.io/_pages/Download/Download_windows.html>`__ and"
" install `Graphviz <https://graphviz.gitlab.io/>`__. The installer will "
"ask if to add graphviz to PATH, choose to either add it to the current "
"user or all users."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:26
msgid "Downloading ROS 2"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:28
msgid "Go to `the releases page <https://github.com/ros2/ros2/releases>`_"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:29
msgid ""
"Download the latest package for Windows, e.g., ``ros2-package-windows-"
"AMD64.zip``."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:33
msgid ""
"There may be more than one binary download option which might cause the "
"file name to differ."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:37
msgid ""
"To download the ROS 2 debug libraries you'll need to download ``ros2"
"-package-windows-debug-AMD64.zip``"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:39
msgid ""
"Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_galactic``\\ "
")."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:42
msgid "Environment setup"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:44
msgid ""
"Start a command shell and source the ROS 2 setup file to set up the "
"workspace:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:50
msgid ""
"It is normal that the previous command, if nothing else went wrong, "
"outputs \"The system cannot find the path specified.\" exactly once."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:53
msgid "Try some examples"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:55
msgid ""
"In a command shell, set up the ROS 2 environment as described above and "
"then run a C++ ``talker``\\ :"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:61
msgid "Start another command shell and run a Python ``listener``\\ :"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:67
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages "
"and the ``listener`` saying ``I heard`` those messages. This verifies "
"both the C++ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:73
msgid "Next steps after installing"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:74
msgid ""
"Continue with the :doc:`tutorials and demos <../Tutorials>` to configure "
"your environment, create your own workspace and packages, and learn ROS 2"
" core concepts."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:77
msgid "Using the ROS 1 bridge"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:78
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. "
"See the dedicated `documentation "
"<https://github.com/ros2/ros1_bridge/blob/master/README.md>`__ on how to "
"build and use the ROS 1 bridge."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:81
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:82
msgid ""
"The default middleware that ROS 2 uses is ``Cyclone DDS``, but the "
"middleware (RMW) can be replaced at runtime. See the :doc:`guide <../How-"
"To-Guides/Working-with-multiple-RMW-implementations>` on how to work with"
" multiple RMWs."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:86
msgid "Troubleshooting"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:88
msgid ""
"Troubleshooting techniques can be found :ref:`here <windows-"
"troubleshooting>`."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:91
msgid "Uninstall"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:93
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not"
" sourcing the workspace's ``setup`` file. This way, your environment will"
" behave as though there is no galactic install on your system."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:96
msgid ""
"If you're also trying to free up space, you can delete the entire "
"workspace directory with:"
msgstr ""

#~ msgid ""
#~ "The pre-built binary does not "
#~ "include all ROS 2 packages. All "
#~ "packages in the `ROS base variant "
#~ "<https://ros.org/reps/rep-2001.html#ros-base>`_ are "
#~ "included, and only a subset of "
#~ "packages in the `ROS desktop variant "
#~ "<https://ros.org/reps/rep-2001.html#desktop-variants>`_ "
#~ "are included. The exact list of "
#~ "packages are described by the "
#~ "repositories listed in `this ros2.repos "
#~ "file <https://github.com/ros2/ros2/blob/xin/ros2.repos>`_."
#~ msgstr ""

#~ msgid "Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_xin``\\ )."
#~ msgstr ""

#~ msgid ""
#~ "If you installed your workspace with "
#~ "colcon as instructed above, \"uninstalling\""
#~ " could be just a matter of "
#~ "opening a new terminal and not "
#~ "sourcing the workspace's ``setup`` file. "
#~ "This way, your environment will behave"
#~ " as though there is no xin "
#~ "install on your system."
#~ msgstr ""

