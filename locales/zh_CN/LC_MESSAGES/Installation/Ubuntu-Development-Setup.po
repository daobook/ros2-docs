# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# xinetzone <735613050@qq.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 16:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:8
msgid "Building ROS 2 on Ubuntu Linux"
msgstr "在 Ubuntu Linux 上构建 ROS 2"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:13
msgid "Table of Contents"
msgstr "目录"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:16
msgid "System requirements"
msgstr "系统需求"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:17
msgid "The current Debian-based target platforms for Galactic Geochelone are:"
msgstr "Galactic Geochelone 目前基于 Debian 的目标平台是："

#: ../../source/Installation/Ubuntu-Development-Setup.rst:19
msgid "Tier 1: Ubuntu Linux - Focal Fossa (20.04) 64-bit"
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:20
msgid "Tier 3: Debian Linux - Bullseye (11) 64-bit"
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:23
msgid "Other Linux platforms with varying support levels include:"
msgstr "其他支持级别不同的 Linux 平台包括："

#: ../../source/Installation/Ubuntu-Development-Setup.rst:25
msgid ""
"Arch Linux, see `alternate instructions "
"<https://wiki.archlinux.org/index.php/ROS#ROS_2>`__"
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:26
msgid "Fedora Linux, see `alternate instructions <Fedora-Development-Setup>`"
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:27
msgid ""
"OpenEmbedded / webOS OSE, see `alternate instructions "
"<https://github.com/ros/meta-ros/wiki/OpenEmbedded-Build-Instructions>`__"
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:29
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_."
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:32
msgid "System setup"
msgstr "系统设置"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:35
msgid "Set locale"
msgstr "设置语言环境"

#: ../../source/Installation/_Ubuntu-Set-Locale.rst:1
msgid ""
"Make sure you have a locale which supports ``UTF-8``. If you are in a "
"minimal environment (such as a docker container), the locale may be "
"something minimal like ``POSIX``. We test with the following settings. "
"However, it should be fine if you're using a different UTF-8 supported "
"locale."
msgstr ""
"确保您有一个支持 ``UTF-8`` 的语言环境（locale）。如果您在一个最小的环境中（例如 docker 容器），locale 设置可能是 "
"``POSIX`` 这样的最小环境。我们使用以下设置进行测试。但是，如果您使用的是支持 UTF-8 的不同语言环境，那么这应该没问题。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:40
msgid "Add the ROS 2 apt repository"
msgstr "添加 ROS 2 apt 存储库"

#: ../../source/Installation/_Apt-Repositories.rst:1
msgid ""
"You will need to add the ROS 2 apt repository to your system. First, make"
" sure that the `Ubuntu Universe repository "
"<https://help.ubuntu.com/community/Repositories/Ubuntu>`_ is enabled by "
"checking the output of this command."
msgstr ""
"您需要将 ROS 2 apt 存储库添加到系统中。首先，通过检查这个命令的输出，确保 `Ubuntu Universe 存储库 "
"<https://help.ubuntu.com/community/Repositories/Ubuntu>`_ 是启用的。"

#: ../../source/Installation/_Apt-Repositories.rst:10
msgid ""
"If you don't see an output line like the one above, then enable the "
"Universe repository with these instructions."
msgstr "如果您没有看到如上所示的输出行，那么使用以下指令启用 Universe 存储库。"

#: ../../source/Installation/_Apt-Repositories.rst:18
msgid ""
"Now add the ROS 2 apt repository to your system. First authorize our GPG "
"key with apt."
msgstr "现在将 ROS 2 apt 存储库添加到系统中。首先用 apt 授权我们的 GPG 密钥。"

#: ../../source/Installation/_Apt-Repositories.rst:26
msgid "Then add the repository to your sources list."
msgstr "然后将存储库添加到源代码列表中。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:45
msgid "Install development tools and ROS tools"
msgstr "安装开发工具和 ROS 工具"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:76
msgid ""
"Ubuntu 18.04 is not an officially supported platform, but may still work."
"  You'll need at least the following additional dependencies:"
msgstr "Ubuntu 18.04 不是官方支持的平台，但仍然可以工作。你至少需要以下额外的依赖项："

#: ../../source/Installation/Ubuntu-Development-Setup.rst:85
msgid "Get ROS 2 code"
msgstr "获得 ROS 2 代码"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:87
msgid "Create a workspace and clone all repos:"
msgstr "创建工作区并克隆所有的储存库"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:99
msgid "Install dependencies using rosdep"
msgstr "使用 rosdep 安装依赖"

#: ../../source/Installation/_rosdep_Linux_Mint.rst:1
msgid ""
"**Note**: If you're using a distribution that is based on Ubuntu (like "
"Linux Mint) but does not identify itself as such, you'll get an error "
"message like ``Unsupported OS [mint]``. In this case append "
"``--os=ubuntu:focal`` to the above command."
msgstr ""
"**注意**：如果你使用的是基于 Ubuntu 的发行版（如 Linux Mint），"
"但没有标明自己是 Ubuntu，你会得到一个错误信息，"
"如 ``Unsupported OS [mint]``。"
"在这种情况下，将 ``--os=ubuntu:focal`` 附加到上述命令中。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:110
msgid "Install additional DDS implementations (optional)"
msgstr "安装额外的 DDS 实现（可选）"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:112
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"Eclipse Cyclone DDS, you can find instructions :doc:`here <DDS-"
"Implementations>`."
msgstr ""
"如果你想使用除了默认的 Eclipse Cyclone DDS 之外的另一个 DDS 或 RTPS 供应商，"
"你可以在 :doc:`DDS 实现 <DDS-Implementations>` 找到说明。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:115
msgid "Build the code in the workspace"
msgstr "在工作区中构建代码"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:117
msgid ""
"If you have already installed ROS 2 another way (either via Debians or "
"the binary distribution), make sure that you run the below commands in a "
"fresh environment that does not have those other installations sourced. "
"Also ensure that you do not have ``source "
"/opt/ros/${ROS_DISTRO}/setup.bash`` in your ``.bashrc``. You can make "
"sure that ROS 2 is not sourced with the command ``printenv | grep -i "
"ROS``. The output should be empty."
msgstr ""
"如果你已经通过其他方式安装了 ROS 2（无论是通过 Debians 还是二进制发行），"
"请确保你在一个没有其他安装源的新环境中运行以下命令。"
"还要确保你的 ``.bashrc`` 中没有 ``source /opt/ros/${ROS_DISTRO}/setup.bash``。"
"你可以用 ``printenv | grep -i ROS`` 命令来确保 ROS 2 没有来源。输出结果应该是空的。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:122
msgid ""
"More info on working with a ROS workspace can be found in :doc:`this "
"tutorial <../Tutorials/Colcon-Tutorial>`."
msgstr ""
"关于使用 ROS 工作区的更多信息可以在 :doc:`Colcon 教程 <../Tutorials/Colcon-Tutorial>` 中找到。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:129
msgid ""
"Note: if you are having trouble compiling all examples and this is "
"preventing you from completing a successful build, you can use "
"``COLCON_IGNORE`` in the same manner as `CATKIN_IGNORE "
"<https://github.com/ros-infrastructure/rep/blob/master/rep-0128.rst>`__ "
"to ignore the subtree or remove the folder from the workspace. Take for "
"instance: you would like to avoid installing the large OpenCV library. "
"Well then simply run ``touch COLCON_IGNORE`` in the ``cam2image`` demo "
"directory to leave it out of the build process."
msgstr ""
"注意：如果你在编译所有的例子时遇到困难，并且这阻碍了你完成成功的构建，"
"你可以使用 ``COLCON_IGNORE`` （与 `CATKIN_IGNORE "
"<https://github.com/ros-infrastructure/rep/blob/master/rep-0128.rst>`__ 的方式相同）"
"以忽略子树或从工作区移除该文件夹。举个例子：你想避免安装大型的 OpenCV 库。"
"那么只需在 ``cam2image`` 演示目录下运行 ``touch COLCON_IGNORE``，就可以把它排除在构建过程之外。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:134
msgid "Environment setup"
msgstr "环境设置"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:137
msgid "Source the setup script"
msgstr "获取设置脚本"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:139
msgid "Set up your environment by sourcing the following file."
msgstr "通过获取以下文件来设置环境。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:148
msgid "Try some examples"
msgstr "尝试一些例子"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:150
msgid "In one terminal, source the setup file and then run a C++ ``talker``\\ :"
msgstr "在一个终端中，获取设置文件的源代码，然后运行一个 C++ ``talker``："

#: ../../source/Installation/Ubuntu-Development-Setup.rst:157
msgid ""
"In another terminal source the setup file and then run a Python "
"``listener``\\ :"
msgstr ""
"在另一个终端源代码设置文件，然后运行 Python ``listener``\\ ："

#: ../../source/Installation/Ubuntu-Development-Setup.rst:164
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages "
"and the ``listener`` saying ``I heard`` those messages. This verifies "
"both the C++ and Python APIs are working properly. Hooray!"
msgstr ""
"你应该看到 ``talker`` 说它 ``Publishing`` 信息，``listener`` 说 ``I heard`` 这些信息。"
"这就验证了 C++ 和 Python 的 API 都在正常工作。好耶！"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:169
msgid "Next steps after installing"
msgstr "安装后的后续步骤"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:170
msgid ""
"Continue with the :doc:`tutorials and demos <../Tutorials>` to configure "
"your environment, create your own workspace and packages, and learn ROS 2"
" core concepts."
msgstr ""
"继续学习 :doc:`教程和演示 <../Tutorials>` 来配置你的环境，"
"创建你自己的工作空间和软件包，并学习 ROS 2 的核心概念。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:173
msgid "Using the ROS 1 bridge"
msgstr "使用 ROS 1 桥接"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:174
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. "
"See the dedicated `documentation "
"<https://github.com/ros2/ros1_bridge/blob/master/README.md>`__ on how to "
"build and use the ROS 1 bridge."
msgstr ""
"ROS 1 桥接可以将主题从 ROS 1 连接到 ROS 2，反之亦然。"
"关于如何构建和使用 ROS 1 桥接，请参见专门的 "
"`文档 <https://github.com/ros2/ros1_bridge/blob/master/README.md>`__。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:177
msgid "Additional RMW implementations (optional)"
msgstr "额外的 RMW 实现（可选）"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:178
msgid ""
"The default middleware that ROS 2 uses is ``Cyclone DDS``, but the "
"middleware (RMW) can be replaced at runtime. See the :doc:`guide <../How-"
"To-Guides/Working-with-multiple-RMW-implementations>` on how to work with"
" multiple RMWs."
msgstr ""
"ROS 2 使用的默认中间件是 ``Cyclone DDS``，但中间件（RMW）可以在运行时替换。"
"请参阅 :doc:`指南 <../How-To-Guides/Working-with-multiple-RMW-implementations>` "
"关于如何使用多个 RMW。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:182
msgid "Alternate compilers"
msgstr "备选编译器"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:184
msgid ""
"Using a different compiler besides gcc to compile ROS 2 is easy. If you "
"set the environment variables ``CC`` and ``CXX`` to executables for a "
"working C and C++ compiler, respectively, and retrigger CMake "
"configuration (by using ``--force-cmake-config`` or by deleting the "
"packages you want to be affected), CMake will reconfigure and use the "
"different compiler."
msgstr ""
"使用 gcc 以外的不同编译器来编译 ROS 2 很容易。"
"如果你把环境变量 ``CC`` 和 ``CXX`` 分别设置为工作中的 C 和 C++ 编译器的可执行文件，"
"并重新触发 CMake 配置（通过使用 ``--force-cmake-config`` 或删除你想影响的包），"
"CMake 将重新配置并使用不同的编译器。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:187
msgid "Clang"
msgstr ""

#: ../../source/Installation/Ubuntu-Development-Setup.rst:189
msgid "To configure CMake to detect and use Clang:"
msgstr "要配置 CMake 来检测和使用 Clang："

#: ../../source/Installation/Ubuntu-Development-Setup.rst:199
msgid "Stay up to date"
msgstr "保持最新状态"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:201
msgid ""
"See :doc:`./Maintaining-a-Source-Checkout` to periodically refresh your "
"source installation."
msgstr ""
"参见 :doc:`./Maintaining-a-Source-Checkout`，定期刷新你的源码安装。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:204
msgid "Troubleshooting"
msgstr "故障诊断"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:206
msgid ""
"Troubleshooting techniques can be found :ref:`here <linux-"
"troubleshooting>`."
msgstr ""
"故障诊断技术可以在 :ref:`here <linux-troubleshooting>` 找到。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:209
msgid "Uninstall"
msgstr "卸载"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:211
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not"
" sourcing the workspace's ``setup`` file. This way, your environment will"
" behave as though there is no galactic install on your system."
msgstr ""
"如果你按照上面的指示用 colcon 安装了你的工作空间，\"uninstalling\" 可能只是打开一个新的终端，"
"而不是 sourcing 工作空间的 ``setup`` 文件。"
"这样一来，你的环境就会表现得好像你的系统上没有安装 galactic 一样。"

#: ../../source/Installation/Ubuntu-Development-Setup.rst:214
msgid ""
"If you're also trying to free up space, you can delete the entire "
"workspace directory with:"
msgstr ""
"如果你也想释放空间，你可以删除整个工作区目录："
